function Food.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 2
pop this 0
push argument 0
pop this 1
push constant 5
call Array.new 1
pop this 2
push constant 5
call Array.new 1
pop this 3
push constant 0
pop this 4
push constant 0
push this 2
add
push constant 200
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push this 3
add
push constant 70
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 2
add
push constant 120
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 3
add
push constant 120
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 2
add
push constant 170
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 3
add
push constant 70
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 2
add
push constant 350
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 3
add
push constant 100
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 2
add
push constant 250
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 3
add
push constant 180
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Food.drawFood 1
pop temp 0
push pointer 0
return
function Food.drawFood 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 4
push this 2
add
pop pointer 1
push that 0
push this 4
push this 3
add
pop pointer 1
push that 0
push this 0
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Food.eraseFood 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 4
push this 2
add
pop pointer 1
push that 0
push this 4
push this 3
add
pop pointer 1
push that 0
push this 0
call Screen.drawCircle 3
pop temp 0
push this 4
push constant 4
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
push constant 1
add
pop this 4
goto IF_END0
label IF_FALSE0
push constant 0
pop this 4
label IF_END0
push constant 0
return
function Food.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Food.eraseFood 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Food.getX 0
push argument 0
pop pointer 0
push this 4
push this 2
add
pop pointer 1
push that 0
return
function Food.getY 0
push argument 0
pop pointer 0
push this 4
push this 3
add
pop pointer 1
push that 0
return
function Food.radius 0
push argument 0
pop pointer 0
push this 0
return
function Food.getValue 0
push argument 0
pop pointer 0
push this 1
return
function Food.setValue 0
push argument 0
pop pointer 0
push argument 1
pop this 1
push constant 0
return
